March 16:

added "config.new_page_parts = true" to pages.rb in the refinery
initializers folder. this allows a new section to be created within
pages. Don't know if this will be necessary or not for this project, but
useful to know!

useful railscast:http://railscasts.com/episodes/332-refinery-cms-basics?view=comments

rake refinery:override view=refinery/...  (_heaader, _footer, _menu, etc)
rake refinery:override view=refinery/layouts/application
rake refinery:override view=refinery/_content_page
to start "theming"

Weird issue with original home page not populatingcorrectly, so strange css classes kept coming up. Should have changed after overriding Show.html.erb, but didn't. Works fine on newly created pages.

Next, change the home page!!

March 17

Did it!

Also, wanted to make the logo stick on the side, sort of like the twitter bootstrap responsive page. Finally got it to work using the following:
<%= link_to image_tag("blue_door_logo.png"), refinery.root_path %>
the image being the first bit, and the link to the refinery root path the second (duh). It's not "sticky" (fixed) but I think will look cool as should take up the top part of the screen on a mobile. 

Shall I try pushing to Heroku?

ok deployed on heroku and seems to work fine, except for the home page thing! How did I fix it before? I think i just redid the databases which seemed to do the trick. Tried doing that in heroku but didn't quite work. Maybe they're not working totally correctly (precompile assets stuff?) will work on next.

March22

Got javascript going! Super easy, just called it in at the end after overriding the javascript for refinery.

Finally managed to change the "selected" class to "active" to better fit with bootstrap. Followed setup on this page: https://gist.github.com/1804715, specifically change the application_helper to setup a custom css, and then call that custom css in the menu_branch erb. The actual coding is beyond me at this point, but was successfully able to copy and paste correctly enough. I just don't understand rails/ruby syntax well enough!